{
      "name": "HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 152,
      "end": 254,
      "returns": [
            {
                  "begin": 158,
                  "end": 158,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 253,
                  "end": 253,
                  "need_brackets": false,
                  "returned_value": "HAL_OK",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 263,
      "end": 343,
      "returns": [
            {
                  "begin": 268,
                  "end": 268,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 342,
                  "end": 342,
                  "need_brackets": false,
                  "returned_value": "HAL_OK",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "SrcAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DstAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DataLength"
                  }
            ]
      ],
      "begin": 378,
      "end": 409,
      "returns": [
            {
                  "begin": 408,
                  "end": 408,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "SrcAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DstAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DataLength"
                  }
            ]
      ],
      "begin": 422,
      "end": 482,
      "returns": [
            {
                  "begin": 481,
                  "end": 481,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 491,
      "end": 535,
      "returns": [
            {
                  "begin": 534,
                  "end": 534,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 544,
      "end": 600,
      "returns": [
            {
                  "begin": 599,
                  "end": 599,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef CompleteLevel, uint32_t Timeout)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "HAL_DMA_LevelCompleteTypeDef",
                        "param_name": "CompleteLevel"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "Timeout"
                  }
            ]
      ],
      "begin": 612,
      "end": 732,
      "returns": [
            {
                  "begin": 621,
                  "end": 621,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 628,
                  "end": 628,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 665,
                  "end": 665,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 681,
                  "end": 681,
                  "need_brackets": false,
                  "returned_value": "HAL_ERROR",
                  "return_warning": ""
            },
            {
                  "begin": 731,
                  "end": 731,
                  "need_brackets": false,
                  "returned_value": "HAL_OK",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 741,
      "end": 822,
      "returns": [
            {
                  "begin": 821,
                  "end": 821,
                  "need_brackets": false,
                  "returned_value": "",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID, void (* pCallback)(DMA_HandleTypeDef *_hdma))",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "HAL_DMA_CallbackIDTypeDef",
                        "param_name": "CallbackID"
                  },
                  {
                        "param_type": "function_ptr",
                        "param_name": " pCallback"
                  }
            ]
      ],
      "begin": 835,
      "end": 875,
      "returns": [
            {
                  "begin": 874,
                  "end": 874,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "HAL_DMA_CallbackIDTypeDef",
                        "param_name": "CallbackID"
                  }
            ]
      ],
      "begin": 886,
      "end": 933,
      "returns": [
            {
                  "begin": 932,
                  "end": 932,
                  "need_brackets": false,
                  "returned_value": "status",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 964,
      "end": 967,
      "returns": [
            {
                  "begin": 966,
                  "end": 966,
                  "need_brackets": false,
                  "returned_value": "hdma->State",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 976,
      "end": 978,
      "returns": [
            {
                  "begin": 977,
                  "end": 977,
                  "need_brackets": false,
                  "returned_value": "hdma->ErrorCode",
                  "return_warning": ""
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "SrcAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DstAddress"
                  },
                  {
                        "param_type": "uint32_t",
                        "param_name": "DataLength"
                  }
            ]
      ],
      "begin": 1002,
      "end": 1036,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 1045,
      "end": 1072,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)",
      "parameters": [
            [
                  {
                        "param_type": "DMA_HandleTypeDef*",
                        "param_name": "hdma"
                  }
            ]
      ],
      "begin": 1082,
      "end": 1091,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}