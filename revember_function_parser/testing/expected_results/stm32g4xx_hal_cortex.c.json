{
      "name": "void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)",
      "parameters": [],
      "begin": 163,
      "end": 169,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)",
      "parameters": [],
      "begin": 185,
      "end": 195,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 207,
      "end": 213,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 223,
      "end": 229,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_SystemReset(void)",
      "parameters": [],
      "begin": 236,
      "end": 239,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)",
      "parameters": [],
      "begin": 249,
      "end": 251,
      "returns": [
            {
                  "begin": 250,
                  "end": 250,
                  "need_brackets": false,
                  "returned_value": "SysTick_Config(TicksNumb)",
                  "return_warning": "compound return value"
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "uint32_t HAL_NVIC_GetPriorityGrouping(void)",
      "parameters": [],
      "begin": 277,
      "end": 280,
      "returns": [
            {
                  "begin": 279,
                  "end": 279,
                  "need_brackets": false,
                  "returned_value": "NVIC_GetPriorityGrouping()",
                  "return_warning": "compound return value"
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint32_t *pSubPriority)",
      "parameters": [],
      "begin": 304,
      "end": 309,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 319,
      "end": 325,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 337,
      "end": 343,
      "returns": [
            {
                  "begin": 342,
                  "end": 342,
                  "need_brackets": false,
                  "returned_value": "NVIC_GetPendingIRQ(IRQn)",
                  "return_warning": "compound return value"
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 353,
      "end": 359,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)",
      "parameters": [],
      "begin": 370,
      "end": 373,
      "returns": [
            {
                  "begin": 372,
                  "end": 372,
                  "need_brackets": false,
                  "returned_value": "NVIC_GetActive(IRQn)",
                  "return_warning": "compound return value"
            }
      ],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)",
      "parameters": [],
      "begin": 384,
      "end": 395,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_SYSTICK_IRQHandler(void)",
      "parameters": [],
      "begin": 402,
      "end": 404,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "__weak void HAL_SYSTICK_Callback(void)",
      "parameters": [],
      "begin": 411,
      "end": 415,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_MPU_Enable(uint32_t MPU_Control)",
      "parameters": [],
      "begin": 430,
      "end": 437,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_MPU_Disable(void)",
      "parameters": [],
      "begin": 445,
      "end": 451,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_MPU_EnableRegion(uint32_t RegionNumber)",
      "parameters": [],
      "begin": 458,
      "end": 467,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_MPU_DisableRegion(uint32_t RegionNumber)",
      "parameters": [],
      "begin": 474,
      "end": 483,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}{
      "name": "void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)",
      "parameters": [],
      "begin": 492,
      "end": 521,
      "returns": [],
      "warnings": [],
      "revember_artifacts": []
}